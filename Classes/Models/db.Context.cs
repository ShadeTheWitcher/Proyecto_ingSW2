//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Proyecto_Taller_AdminShop.Classes.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Admin_shopEntities : DbContext
    {
        public Admin_shopEntities()
            : base("name=Admin_shopEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Categoria> Categoria { get; set; }
        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<Producto> Producto { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
        public virtual DbSet<Venta> Venta { get; set; }
        public virtual DbSet<Venta_detalle> Venta_detalle { get; set; }
    
        public virtual int InsertarProductoDB(string descripcion, Nullable<double> precio_costo, Nullable<double> precio_venta, Nullable<int> stock, Nullable<int> id_categoria, Nullable<int> create_by)
        {
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var precio_costoParameter = precio_costo.HasValue ?
                new ObjectParameter("precio_costo", precio_costo) :
                new ObjectParameter("precio_costo", typeof(double));
    
            var precio_ventaParameter = precio_venta.HasValue ?
                new ObjectParameter("precio_venta", precio_venta) :
                new ObjectParameter("precio_venta", typeof(double));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("stock", stock) :
                new ObjectParameter("stock", typeof(int));
    
            var id_categoriaParameter = id_categoria.HasValue ?
                new ObjectParameter("id_categoria", id_categoria) :
                new ObjectParameter("id_categoria", typeof(int));
    
            var create_byParameter = create_by.HasValue ?
                new ObjectParameter("create_by", create_by) :
                new ObjectParameter("create_by", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarProductoDB", descripcionParameter, precio_costoParameter, precio_ventaParameter, stockParameter, id_categoriaParameter, create_byParameter);
        }
    }
}
